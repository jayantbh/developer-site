{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/hello-world/","result":{"data":{"site":{"siteMetadata":{"title":"Jayant's Clipboard","author":"Jayant Bhawal"}},"mdx":{"id":"176de16e-534c-5f46-b230-609ba26c3b52","excerpt":"Here we go again... I've made an attempt at a blog over 4 times so far. Twice at\n blog.jayantbhawal.in , twice at\n ideabuster.jayantbhawal.in . The first…","frontmatter":{"title":"Hello World","desc":null,"date":"December 19, 2019","timestamp":"1576713600000"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hello World\",\n  \"date\": \"2019-12-19\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Here we go again\\u2026\"), mdx(\"p\", null, \"I\\u2019ve made an attempt at a blog over 4 times so far. Twice at\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.jayantbhawal.in\"\n  }, \"blog.jayantbhawal.in\"), \", twice at\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ideabuster.jayantbhawal.in\"\n  }, \"ideabuster.jayantbhawal.in\"), \".\"), mdx(\"p\", null, \"The first 3 times, it was more for a \\u201Clet\\u2019s see how this is done\\u201D reason. The\\n4th or so time, it was that, plus to actually add some content, which is there\\non \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://blog.jayantbhawal.in\"\n  }, \"blog.jayantbhawal.in\"), \".\"), mdx(\"p\", null, \"However, the blog hosted on the current link is\\u2026 kinda slow. It\\u2019s Wordpress\\nbased, so it\\u2019s pretty easy to use and publish content from, but it can be\\npainfully slow to load on not-excellent networks. Doesn\\u2019t look too good for a\\nfrontend developer now, does it?\"), mdx(\"p\", null, \"So here\\u2019s my\\u2026 5th attempt at this?\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"A gatsby based blog site! All the cool kids are doing it!\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"It allows me great extensibility though, like, you\\u2019ll find posts where you can\\nwrite, edit, and preview React examples right on the page itself, and interact\\nwith it too! Who needs codepen or jsfiddle for these things? (Probably me, for\\nmore complex examples.)\"), mdx(\"p\", null, \"This is great though. It\\u2019s fast, it\\u2019s simple, basically no bloat, etc. Needs a\\nbit more work, and I\\u2019m looking forward to it. :)\"));\n}\n;\nMDXContent.isMDXComponent = true;","timeToRead":1},"allFile":{"nodes":[{"publicURL":"/static/33aa1cc29950b54cd0f69bcad79d82de/176de16e-534c-5f46-b230-609ba26c3b52.png"}]},"oEmbed":{"nodes":[{"publicURL":"/static/a5ab836181b79aff7118dbe5da5822d0/176de16e-534c-5f46-b230-609ba26c3b52.json"}]}},"pageContext":{"slug":"/hello-world/","metaImg":"**/176de16e-534c-5f46-b230-609ba26c3b52.png","oEmbed":"**/176de16e-534c-5f46-b230-609ba26c3b52.json","previous":null,"next":{"id":"7709b983-cba0-5778-b7b9-198ddd544327","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Optional Chaining is ❤\",\n  \"desc\": \"Looking up nested properties doesn't need to be painful. It used to be, and now it isn't anymore! Thanks TC39!\",\n  \"date\": \"2019-12-24\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Let\\u2019s look at a use-case that\\u2019s not too uncommon:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const definition =\\n  dictionary.words &&\\n  dictionary.words.apple &&\\n  dictionary.words.apple.definition;\\n\")), mdx(\"p\", null, \"Oh my, that\\u2019s an eyeful. All I wanted to get was the definition of apple, if\\npresent, in a user-created dictionary, meaning that the initial state of this\\ndictionary could possibly be completely empty.\"), mdx(\"p\", null, \"This has been a little painful, and has been a thing since years.\"), mdx(\"h2\", null, \"We\\u2019ve had \\u201Csolutions\\u201D since long too\"), mdx(\"p\", null, \"The fine creators of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coffeescript.org/\"\n  }, \"coffeescript\"), \" did indeed solve\\nthis issue in a way. They introduced the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://coffeescript.org/#existential-operator\"\n  }, mdx(\"em\", {\n    parentName: \"a\"\n  }, \"Existential Operator\")), \", and\\nthis is how that looked like:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-coffeescript\"\n  }, \"solipsism = true if mind? and not world?\\n\\nspeed = 0\\nspeed ?= 15\\n\\nfootprints = yeti ? \\\"bear\\\"\\n\\nzip = lottery.drawWinner?().address?.zipcode\\n\")), mdx(\"p\", null, \"Amazing right? Though a lot of this stuff has come into JS, it didn\\u2019t make an\\nas-is introduction. In fact, many other languages too had the optional chaining\\noperator with them, and a lot of discussion was had before they arrived on the\\nbest solution that would play nice in JS. A lot of the stuff from the\\ncoffeescript example doesn\\u2019t exist nicely in JS.\"), mdx(\"p\", null, \"That exact example would look like this in JS:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// solipsism = true if mind? and not world?\\n\\n// speed = 0\\n// speed ?= 15\\n\\nfootprints = yeti ?? \\\"bear\\\" // nullish coalescing\\n\\nzip = lottery.drawWinner?().address?.zipcode // optional chaining\\n\\n// Hence, the first example would look like:\\nconst definition = dictionary.words?.apple?.definition;\\n\")), mdx(\"p\", null, \"I am a straight up fan of this thing, and I\\u2019ve been tracking progress of this\\nsince a year before it released!\"), mdx(\"p\", null, \"Optional Chaining and Nullish Coalescing are now in Stage 4, and released into\\nsome major browsers. It was added to TypeScript 3.7 a week after it was moved to\\nStage 3. Soon afterwards, it was added to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"react-scripts 3.3.0-next.62\"), \" (with\\nTS), and was released in the stable 3.3 build of react-scripts.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Let's look at a use-case that's not too uncommon: Oh my, that's an eyeful. All I wanted to get was the definition of apple, if\npresent, in a…","fields":{"slug":"/optional-chaining/"},"frontmatter":{"title":"Optional Chaining is ❤","date":"2019-12-24","desc":"Looking up nested properties doesn't need to be painful. It used to be, and now it isn't anymore! Thanks TC39!"},"timeToRead":1,"fileAbsolutePath":"/home/jayantbh/Projects/developer-site/content/blog/optional-chaining.mdx"}}},"staticQueryHashes":["3590593752","426816048"]}