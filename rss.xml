<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby RSS feed]]></title><description><![CDATA[This is about me, my blog, and what I'm up to.]]></description><link>http://github.com/dylang/node-rss</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 02 Mar 2020 11:05:20 GMT</lastBuildDate><item><title><![CDATA[My approach to data privacy]]></title><link>https://jayant.dev/my-approach-to-data-privacy/</link><guid isPermaLink="false">https://jayant.dev/my-approach-to-data-privacy/</guid><pubDate>Mon, 02 Mar 2020 00:00:00 GMT</pubDate><content:encoded>function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i &lt; arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i &lt; sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) &gt;= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i &lt; sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) &gt;= 0) continue; target[key] = source[key]; } return target; }

/* @jsx mdx */
var _frontmatter = {
  &quot;title&quot;: &quot;My approach to data privacy&quot;,
  &quot;date&quot;: &quot;2020-03-02&quot;
};

var makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn(&quot;Component &quot; + name + &quot; was not imported, exported, or provided by MDXProvider as global scope&quot;);
    return mdx(&quot;div&quot;, props);
  };
};

var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = &quot;wrapper&quot;;
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, [&quot;components&quot;]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: &quot;MDXLayout&quot;
  }), mdx(&quot;p&quot;, null, &quot;Like most people, I used to not care about what happens with my data. And I was\nall too willing and enthusiastic about sharing everything.&quot;), mdx(BoxedSection, {
    mdxType: &quot;BoxedSection&quot;
  }, mdx(&quot;p&quot;, null, &quot;This post will talk about some (not all) of the privacy measures I take. I\u2019ll\nmention several tools, extensions, and other things I use or do to keep my\ninternet activities out of reach of those that I don\u2019t explicitly share with.&quot;), mdx(&quot;p&quot;, null, &quot;For example, me sharing stuff on Twitter is okay to me, because I am\nintentionally providing that information, but Uber having my location\ninformation in the background all the time is not okay, neither is it okay for\nsome third party food delivery app to constantly fetch ad related data, or send\nout metrics without explicit consent.&quot;)), mdx(&quot;p&quot;, null, mdx(&quot;em&quot;, {
    parentName: &quot;p&quot;
  }, &quot;Facebook wants my data? Sure! What could they possibly do with it? None of my\ndata is meaningful enough. And I love sharing everything about me with everyone\non the internet! All the movies and TV shows I like, the places I\u2019ve been to,\nany and every half-significant life event since I was born, every relocation\u2026\n&quot;, mdx(&quot;em&quot;, {
    parentName: &quot;em&quot;
  }, &quot;everything&quot;), &quot;, was just something that everyone should know about!&quot;)), mdx(&quot;hr&quot;, null), mdx(&quot;p&quot;, null, &quot;Yeah. How naive that was. I was very very active on Facebook, Instagram, and\nthe like. And, now I\u2019m not on any Facebook product, and I\u2019ve started taking some\nmeasures to try and stop tracking of my information or internet behavior as far\nas possible. What changed?&quot;), mdx(BoxedSection, {
    mdxType: &quot;BoxedSection&quot;
  }, mdx(&quot;details&quot;, null, mdx(&quot;summary&quot;, null, &quot;This is what happened with Facebook&quot;), mdx(&quot;p&quot;, null, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://www.techrepublic.com/article/facebook-data-privacy-scandal-a-cheat-sheet/&quot;
  }), &quot;techrepublic.com/article/facebook-data-privacy-s\u2026&quot;), mdx(&quot;br&quot;, {
    parentName: &quot;p&quot;
  }), &quot;\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;theguardian.com/technology/2018/dec/14/facebook-privacy-problems-roundup&quot;
  }), &quot;theguardian.com/techology/2018/dec/14\u2026&quot;), mdx(&quot;br&quot;, {
    parentName: &quot;p&quot;
  }), &quot;\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://www.digitaltrends.com/news/facebook-data-leak-267-million-users-affected/&quot;
  }), &quot;digitaltrends.com/news/facebook-data-leak-267-million\u2026/&quot;), mdx(&quot;br&quot;, {
    parentName: &quot;p&quot;
  }), &quot;\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://www.businessinsider.in/tech/facebook-admits-that-it-allowed-netflix-and-spotify-to-access-your-private-messages/articleshow/67161041.cms&quot;
  }), &quot;businessinsider.in/tech/facebook-admits-that-it-allowed-\u2026&quot;), mdx(&quot;br&quot;, {
    parentName: &quot;p&quot;
  }), &quot;\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://www.nytimes.com/2018/12/18/technology/facebook-privacy.html&quot;
  }), &quot;nytimes.com/2018/12/18/technology/facebook-privacy&quot;))), mdx(&quot;details&quot;, null, mdx(&quot;summary&quot;, null, &quot;And here&apos;s some about Cambridge Analytica, remember that one?&quot;), mdx(&quot;p&quot;, null, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://www.theguardian.com/uk-news/2018/mar/23/leaked-cambridge-analyticas-blueprint-for-trump-victory&quot;
  }), &quot;theguardian.com/uk-news/2018/mar/23/leaked-cambridge-\u2026&quot;), mdx(&quot;br&quot;, {
    parentName: &quot;p&quot;
  }), &quot;\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://www.vox.com/policy-and-politics/2018/3/23/17151916/facebook-cambridge-analytica-trump-diagram&quot;
  }), &quot;vox.com/policy-and-politics/2018/3/23/17151916\u2026&quot;))), mdx(&quot;details&quot;, null, mdx(&quot;summary&quot;, null, &quot;Oh, and they were in India too&quot;), mdx(&quot;p&quot;, null, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://theprint.in/politics/exclusive-inside-story-cambridge-analytica-actually-india/44012/&quot;
  }), &quot;theprint.in/politics/exclusive-inside-story-cambridge-\u2026&quot;), mdx(&quot;br&quot;, {
    parentName: &quot;p&quot;
  }), &quot;\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://qz.com/1239561/cambridge-analyticas-parent-firm-proposed-a-massive-political-machine-for-indias-2014-elections/&quot;
  }), &quot;qz.com/1239561/cambridge-analyticas-parent-firm-\u2026&quot;)))), mdx(&quot;p&quot;, null, &quot;All of this made me realize one thing. My data can be used in more ways than I\ncan ever comprehend, and it can be gathered from more sources than I can imagine\nto know more about me than I will ever realize. So what do I do?&quot;), mdx(&quot;p&quot;, null, &quot;I can not achieve zero-visibility into me on day 1 of my realization. I am too\ningrained into services and other stuff that are a part of my daily workflow.\nBut, I can do this bits and pieces at a time. If I am so concerned with\nFacebook, maybe I can stop using that first. That cuts of one entity trying to\nget my data.\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://www.cnet.com/news/shadow-profiles-facebook-has-information-you-didnt-hand-over/&quot;
  }), &quot;Or&quot;), &quot;\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://www.theverge.com/2018/4/11/17225482/facebook-shadow-profiles-zuckerberg-congress-data-privacy&quot;
  }), &quot;does&quot;), &quot;\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://www.vox.com/2018/4/20/17254312/facebook-shadow-profiles-data-collection-non-users-mark-zuckerberg&quot;
  }), &quot;it?&quot;)), mdx(&quot;p&quot;, null, &quot;No, not fully. Not yet. If you followed any of the links above, you know that\nFacebook can build \u201Cshadow profiles\u201D of you even if you don\u2019t have a Facebook\naccount at all. Well, that sucks. Sure, the amount of data I was giving away has\nnot cut down by a lot, but I want them to have basically no data on me anymore\n(beyond what they already have). How do I do that?&quot;), mdx(&quot;p&quot;, null, &quot;We\u2019ll, there\u2019s a few approaches, and not all are equally effective. And often,\nmultiple of these need to be used together to ensure maximum effectiveness. I\nstarted with browser extensions.&quot;), mdx(&quot;h2&quot;, null, &quot;Browser extensions&quot;), mdx(&quot;ul&quot;, null, mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, mdx(&quot;a&quot;, _extends({
    parentName: &quot;li&quot;
  }, {
    &quot;href&quot;: &quot;https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom&quot;
  }), &quot;AdBlock&quot;)), mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, mdx(&quot;a&quot;, _extends({
    parentName: &quot;li&quot;
  }, {
    &quot;href&quot;: &quot;https://chrome.google.com/webstore/detail/privacy-badger/pkehgijcmpdhfbdbbnkijodmdjhbjlgp&quot;
  }), &quot;Privacy Badger&quot;)), mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, mdx(&quot;a&quot;, _extends({
    parentName: &quot;li&quot;
  }, {
    &quot;href&quot;: &quot;https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo&quot;
  }), &quot;Tampermonkey&quot;))), mdx(&quot;p&quot;, null, mdx(&quot;em&quot;, {
    parentName: &quot;p&quot;
  }, &quot;AdBlock&quot;), &quot; stops almost all ads for me anywhere on the internet. Ads are a\nmassive source of information on you for third parties. It does kill one source\nof revenue for a lot of websites on the internet as well, so you may want to\nthink about how you use this extension.&quot;), mdx(&quot;p&quot;, null, mdx(&quot;em&quot;, {
    parentName: &quot;p&quot;
  }, &quot;Privacy Badger&quot;), &quot; helps get rid of all these \u201Csocial\u201D buttons and other shareable\nstuff on websites. The presence of these buttons often indicates that these\nsocial sites and all may be running some scripts on that very page. Don\u2019t want\nthat. It does quite a bit more than that too. It will also block requests to\nknown trackers, or trackers that exist on 3 or more sites. It can also block\ncertain requests from setting cookies, and you can control these settings for\nrequests from specific domains too.&quot;), mdx(InlineImages, {
    images: [&quot;https://i.imgur.com/RlqauzF.png&quot;, &quot;https://i.imgur.com/H8Kj8X8.png&quot;],
    mdxType: &quot;InlineImages&quot;
  }), mdx(&quot;p&quot;, null, mdx(&quot;em&quot;, {
    parentName: &quot;p&quot;
  }, &quot;Tampermonkey&quot;), &quot; runs &quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://en.wikipedia.org/wiki/Userscript&quot;
  }), &quot;userscripts&quot;), &quot;, and\nthere exist userscripts that can run custom logic to stamp out \u201Cadblocker\nblockers\u201D or other tracking entities.&quot;), mdx(&quot;p&quot;, null, &quot;These things together do a pretty great job\u2026 on my browser, which is Chrome at\nthe moment.&quot;), mdx(&quot;p&quot;, null, &quot;What happens when I switch to another browser for some time? Or a native or\nnon-browser application? On any browser or application on my phone? Things are\ntrying to hit tens of thousands of requests in total for ad, tracking, and\nanalytics purposes all day, every day. Other than the obvious privacy concerns\nit also burns my battery capacity, and my data cap. If you\u2019ve not cared too much\nabout your privacy, surely you hate your data running out, or for the unlimited\ndata folks, your battery running out.&quot;), mdx(&quot;h2&quot;, null, &quot;Requests Blocking&quot;), mdx(&quot;p&quot;, null, &quot;Most of what the previously mentioned tools do, is block any requests to known\nor custom hosts. They block all requests to\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://en.wikipedia.org/wiki/DoubleClick&quot;
  }), &quot;doubleclick&quot;), &quot; or google analytics,\namong maybe 40-50 thousand other hosts, just that they are limited to the\nbrowser, and my internet activities obviously go beyond that.&quot;), mdx(&quot;h3&quot;, null, &quot;Hosts File Managers&quot;), mdx(&quot;p&quot;, null, &quot;I considered &quot;, mdx(&quot;strong&quot;, {
    parentName: &quot;p&quot;
  }, &quot;alternative approaches&quot;), &quot;, like using a tool to block requests\nthrough the hosts file, but those can usually be tedious to maintain, and it\u2019s\nnot very cross-platform. As in, it\u2019s a good option, but I wanted to see if I\ncould look for a tool paid or free that would offer more convenience. Also, I\ndidn\u2019t want to root my phone if convenient alternatives were present.&quot;), mdx(&quot;h3&quot;, null, &quot;Local VPN based network interception&quot;), mdx(&quot;p&quot;, null, &quot;I thought to myself, a VPN picks up requests going somewhere starting right on\nmy device, and after a lot of jumping around, it takes the response and feeds it\nback to whatever triggered the request. So, a VPN technically could take the\nrequest right as it was about to fly, and then do something with it, such as\nremove headers or block the request altogether. Such a thing should also me more\ncustomizable than a hosts file, and it could also provide me local analytics on\nblocking and interception, in theory, because as of now I didn\u2019t know if such a\nthing was actually possible.&quot;), mdx(&quot;p&quot;, null, &quot;One quick search for \u201Cvpn based ad blockers\u201D led me to a multitude of such\ntools. I tried two of them, and one of them was a cross-platform one. I\u2019ve\ncross-checked some community feedback on these things by looking stuff up on the\nfollowing subreddits:&quot;), mdx(&quot;ul&quot;, null, mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, mdx(&quot;a&quot;, _extends({
    parentName: &quot;li&quot;
  }, {
    &quot;href&quot;: &quot;https://www.reddit.com/r/privacytoolsIO/&quot;
  }), &quot;https://www.reddit.com/r/privacytoolsIO/&quot;)), mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, mdx(&quot;a&quot;, _extends({
    parentName: &quot;li&quot;
  }, {
    &quot;href&quot;: &quot;https://www.reddit.com/r/Infosec/&quot;
  }), &quot;https://www.reddit.com/r/Infosec/&quot;)), mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, mdx(&quot;a&quot;, _extends({
    parentName: &quot;li&quot;
  }, {
    &quot;href&quot;: &quot;https://www.reddit.com/r/privacy/&quot;
  }), &quot;https://www.reddit.com/r/privacy/&quot;))), mdx(&quot;p&quot;, null, &quot;The tools themselves are:&quot;), mdx(&quot;ul&quot;, null, mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, mdx(&quot;a&quot;, _extends({
    parentName: &quot;li&quot;
  }, {
    &quot;href&quot;: &quot;https://blokada.org/index.html&quot;
  }), &quot;Blokada&quot;)), mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, mdx(&quot;a&quot;, _extends({
    parentName: &quot;li&quot;
  }, {
    &quot;href&quot;: &quot;https://adguard.com/en/welcome.html&quot;
  }), &quot;AdGuard&quot;))), mdx(&quot;p&quot;, null, &quot;I\u2019m sure there was one more, but can\u2019t remember that for now.&quot;), mdx(&quot;hr&quot;, null), mdx(&quot;h2&quot;, null, &quot;TODO:&quot;), mdx(&quot;ul&quot;, null, mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, &quot;Continue describing what I learnt after using Blokada and AdGuard, and how\nI configured them further.&quot;), mdx(&quot;li&quot;, {
    parentName: &quot;ul&quot;
  }, &quot;Android 10, location when app in use permission update.&quot;)));
}
;
MDXContent.isMDXComponent = true;</content:encoded></item><item><title><![CDATA[TIL - The HTML Dialog element]]></title><link>https://jayant.dev/til-html-dialog-element/</link><guid isPermaLink="false">https://jayant.dev/til-html-dialog-element/</guid><pubDate>Fri, 28 Feb 2020 00:00:00 GMT</pubDate><content:encoded>function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i &lt; arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i &lt; sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) &gt;= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i &lt; sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) &gt;= 0) continue; target[key] = source[key]; } return target; }

/* @jsx mdx */
var _frontmatter = {
  &quot;title&quot;: &quot;TIL - The HTML Dialog element&quot;,
  &quot;date&quot;: &quot;2020-02-28&quot;
};

var makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn(&quot;Component &quot; + name + &quot; was not imported, exported, or provided by MDXProvider as global scope&quot;);
    return mdx(&quot;div&quot;, props);
  };
};

var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = &quot;wrapper&quot;;
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, [&quot;components&quot;]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: &quot;MDXLayout&quot;
  }), mdx(&quot;p&quot;, null, &quot;The &quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;
  }), &quot;Dialog\nElement&quot;), &quot; is\nbasically a dialog (duh) all with backdrop support and everything, so in many\ncases you may not need a third party lib to make a dialog. It has native JS APIs\ntoo for opening and closing it. &quot;, mdx(&quot;em&quot;, {
    parentName: &quot;p&quot;
  }, &quot;Note: Browser Support is a little hairy.&quot;)), mdx(&quot;p&quot;, null, &quot;Here\u2019s a hosted example on glitch.me (though you have an example right on this page too):\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://peaceful-meowing-yogurt.glitch.me/&quot;
  }), &quot;https://peaceful-meowing-yogurt.glitch.me/&quot;), &quot;.&quot;), mdx(&quot;blockquote&quot;, null, mdx(&quot;p&quot;, {
    parentName: &quot;blockquote&quot;
  }, &quot;NOTE: Check the MDN Docs linked above to see if your browser supports this.&quot;)), mdx(&quot;p&quot;, null, &quot;All you need to do to toggle a dialog is:&quot;), mdx(&quot;pre&quot;, null, mdx(&quot;code&quot;, _extends({
    parentName: &quot;pre&quot;
  }, {
    &quot;className&quot;: &quot;language-js&quot;,
    &quot;metastring&quot;: &quot;live&quot;,
    &quot;live&quot;: true
  }), &quot;const toggle = () =&gt; {\n  let dialog = document.querySelector(&apos;dialog#d--1&apos;);\n\n  if (!dialog.hasAttribute(&apos;open&apos;)) {\n    dialog.showModal();\n  } else {\n    dialog.removeAttribute(&apos;open&apos;);\n  }\n}\n\nconst Dialog = styled.dialog`\n  color: red;\n\n  &amp;::backdrop {\n    background: rgba(255, 200, 200, 0.6);\n  }\n`;\n\nrender(\n  &lt;div&gt;\n    &lt;button onClick={toggle}&gt;Toggle Dialog&lt;/button&gt;\n    &lt;Dialog id=&apos;d--1&apos; onClick={toggle}&gt;Default Dialog&lt;/Dialog&gt;\n  &lt;/div&gt;\n)\n&quot;)), mdx(&quot;p&quot;, null, &quot;When the dialog is triggered to be open, the &quot;, mdx(&quot;inlineCode&quot;, {
    parentName: &quot;p&quot;
  }, &quot;open&quot;), &quot; attribute is automatically\nadded to it, which can be used to detect if it\u2019s open or not.&quot;), mdx(&quot;p&quot;, null, &quot;And as you see, you can format the backdrop of the dialog using CSS!&quot;), mdx(&quot;hr&quot;, null), mdx(&quot;p&quot;, null, &quot;When I was writing this, I faced an issue that I do not yet know how to solve.\nWhen you open and close the dialog, user selection or text editing on the page\nstops working. If you figure it out, &quot;, mdx(ExternalLink, {
    to: &quot;https://twitter.com/jayantbhawal&quot;,
    mdxType: &quot;ExternalLink&quot;
  }, &quot;tweet&quot;), &quot; at me.&quot;));
}
;
MDXContent.isMDXComponent = true;</content:encoded></item><item><title><![CDATA[Optional Chaining is ❤]]></title><link>https://jayant.dev/optional-chaining/</link><guid isPermaLink="false">https://jayant.dev/optional-chaining/</guid><pubDate>Tue, 24 Dec 2019 00:00:00 GMT</pubDate><content:encoded>function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i &lt; arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i &lt; sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) &gt;= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i &lt; sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) &gt;= 0) continue; target[key] = source[key]; } return target; }

/* @jsx mdx */
var _frontmatter = {
  &quot;title&quot;: &quot;Optional Chaining is ❤&quot;,
  &quot;date&quot;: &quot;2019-12-24&quot;
};

var makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn(&quot;Component &quot; + name + &quot; was not imported, exported, or provided by MDXProvider as global scope&quot;);
    return mdx(&quot;div&quot;, props);
  };
};

var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = &quot;wrapper&quot;;
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, [&quot;components&quot;]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: &quot;MDXLayout&quot;
  }), mdx(&quot;p&quot;, null, &quot;Let\u2019s look at a use-case that\u2019s not too uncommon:&quot;), mdx(&quot;pre&quot;, null, mdx(&quot;code&quot;, _extends({
    parentName: &quot;pre&quot;
  }, {
    &quot;className&quot;: &quot;language-js&quot;
  }), &quot;const definition = dictionary.words &amp;&amp;\n                  dictionary.words.apple &amp;&amp;\n                  dictionary.words.apple.definition;\n&quot;)), mdx(&quot;p&quot;, null, &quot;Oh my, that\u2019s an eyeful. All I wanted to get was the definition of apple, if\npresent, in a user-created dictionary, meaning that the initial state of this\ndictionary could possibly be completely empty.&quot;), mdx(&quot;p&quot;, null, &quot;This has been a little painful, and has been a thing since years.&quot;), mdx(&quot;h2&quot;, null, &quot;We\u2019ve had \u201Csolutions\u201D since long too&quot;), mdx(&quot;p&quot;, null, &quot;The fine creators of &quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://coffeescript.org/&quot;
  }), &quot;coffeescript&quot;), &quot; did indeed solve\nthis issue in a way. They introduced the &quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://coffeescript.org/#existential-operator&quot;
  }), mdx(&quot;em&quot;, {
    parentName: &quot;a&quot;
  }, &quot;Existential\nOperator&quot;)), &quot;, and this is how that\nlooked like:&quot;), mdx(&quot;pre&quot;, null, mdx(&quot;code&quot;, _extends({
    parentName: &quot;pre&quot;
  }, {
    &quot;className&quot;: &quot;language-coffeescript&quot;
  }), &quot;solipsism = true if mind? and not world?\n\nspeed = 0\nspeed ?= 15\n\nfootprints = yeti ? \&quot;bear\&quot;\n\nzip = lottery.drawWinner?().address?.zipcode\n&quot;)), mdx(&quot;p&quot;, null, &quot;Amazing right? Though a lot of this stuff has come into JS, it didn\u2019t make an\nas-is introduction. In fact, many other languages too had the optional chaining\noperator with them, and a lot of discussion was had before they arrived on the\nbest solution that would play nice in JS. A lot of the stuff from the\ncoffeescript example doesn\u2019t exist nicely in JS.&quot;), mdx(&quot;p&quot;, null, &quot;That exact example would look like this in JS:&quot;), mdx(&quot;pre&quot;, null, mdx(&quot;code&quot;, _extends({
    parentName: &quot;pre&quot;
  }, {
    &quot;className&quot;: &quot;language-js&quot;
  }), &quot;// solipsism = true if mind? and not world?\n\n// speed = 0\n// speed ?= 15\n\nfootprints = yeti ?? \&quot;bear\&quot; // nullish coalescing\n\nzip = lottery.drawWinner?().address?.zipcode // optional chaining\n\n// Hence, the first example would look like:\nconst definition = dictionary.words?.apple?.definition;\n&quot;)), mdx(&quot;p&quot;, null, &quot;I am a straight up fan of this thing, and I\u2019ve been tracking progress of this\nsince a year before it released!&quot;), mdx(&quot;p&quot;, null, &quot;Optional Chaining and Nullish Coalescing are now in Stage 4, and released into\nsome major browsers. It was added to TypeScript 3.7 a week after it was moved to\nStage 3. Soon afterwards, it was added to &quot;, mdx(&quot;inlineCode&quot;, {
    parentName: &quot;p&quot;
  }, &quot;react-scripts 3.3.0-next.62&quot;), &quot; (with\nTS), and was released in the stable 3.3 build of react-scripts.&quot;));
}
;
MDXContent.isMDXComponent = true;</content:encoded></item><item><title><![CDATA[Hello World]]></title><link>https://jayant.dev/hello-world/</link><guid isPermaLink="false">https://jayant.dev/hello-world/</guid><pubDate>Thu, 19 Dec 2019 00:00:00 GMT</pubDate><content:encoded>function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i &lt; arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i &lt; sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) &gt;= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i &lt; sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) &gt;= 0) continue; target[key] = source[key]; } return target; }

/* @jsx mdx */
var _frontmatter = {
  &quot;title&quot;: &quot;Hello World&quot;,
  &quot;date&quot;: &quot;2019-12-19&quot;
};

var makeShortcode = function makeShortcode(name) {
  return function MDXDefaultShortcode(props) {
    console.warn(&quot;Component &quot; + name + &quot; was not imported, exported, or provided by MDXProvider as global scope&quot;);
    return mdx(&quot;div&quot;, props);
  };
};

var layoutProps = {
  _frontmatter: _frontmatter
};
var MDXLayout = &quot;wrapper&quot;;
return function MDXContent(_ref) {
  var components = _ref.components,
      props = _objectWithoutProperties(_ref, [&quot;components&quot;]);

  return mdx(MDXLayout, _extends({}, layoutProps, props, {
    components: components,
    mdxType: &quot;MDXLayout&quot;
  }), mdx(&quot;p&quot;, null, &quot;Here we go again\u2026&quot;), mdx(&quot;p&quot;, null, &quot;I\u2019ve made an attempt at a blog over 4 times so far. Twice at\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://blog.jayantbhawal.in&quot;
  }), &quot;blog.jayantbhawal.in&quot;), &quot;, twice at\n&quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://ideabuster.jayantbhawal.in&quot;
  }), &quot;ideabuster.jayantbhawal.in&quot;), &quot;.&quot;), mdx(&quot;p&quot;, null, &quot;The first 3 times, it was more for a \u201Clet\u2019s see how this is done\u201D reason. The\n4th or so time, it was that, plus to actually add some content, which is there\non &quot;, mdx(&quot;a&quot;, _extends({
    parentName: &quot;p&quot;
  }, {
    &quot;href&quot;: &quot;https://blog.jayantbhawal.in&quot;
  }), &quot;blog.jayantbhawal.in&quot;), &quot;.&quot;), mdx(&quot;p&quot;, null, &quot;However, the blog hosted on the current link is\u2026 kinda slow. It\u2019s Wordpress\nbased, so it\u2019s pretty easy to use and publish content from, but it can be\npainfully slow to load on not-excellent networks. Doesn\u2019t look too good for a\nfrontend developer now, does it?&quot;), mdx(&quot;p&quot;, null, &quot;So here\u2019s my\u2026 5th attempt at this?&quot;, mdx(&quot;br&quot;, {
    parentName: &quot;p&quot;
  }), &quot;\n&quot;, &quot;A gatsby based blog site! All the cool kids are doing it!&quot;, mdx(&quot;br&quot;, {
    parentName: &quot;p&quot;
  }), &quot;\n&quot;, &quot;It allows me great extensibility though, like, you\u2019ll find posts where you can\nwrite, edit, and preview React examples right on the page itself, and interact\nwith it too! Who needs codepen or jsfiddle for these things? (Probably me, for\nmore complex examples.)&quot;), mdx(&quot;p&quot;, null, &quot;This is great though. It\u2019s fast, it\u2019s simple, basically no bloat, etc. Needs a\nbit more work, and I\u2019m looking forward to it. :)&quot;));
}
;
MDXContent.isMDXComponent = true;</content:encoded></item></channel></rss>